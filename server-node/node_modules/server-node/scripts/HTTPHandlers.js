(function () {

    'use strict';

    var url = require('url'),
        fs = require('fs'),
        path = require('path'),
        mime = require('mime');

    function HTTPHandlers (server) {

        this.request = function requestHandler (request, response) {
            var urlData = url.parse(request.url),
                theUrl = urlData.pathname,
                pathname = urlData.pathname.substr(1),

                apiData = pathname.split('/'),
                apiName = apiData.splice(0, 1),
                apiParams = apiData.join('/'),
                apiProcessor = server.api.find(apiName);

            if (apiProcessor) {
                apiProcessor.completeRequest(apiParams, request, response);
            } else {
                if (theUrl === '/') {
                    theUrl += 'index.html';
                }
                var filePath = path.join(process.cwd(), theUrl);
                fs.stat(filePath, function (err) {
                    if (err) {
                        response.writeHead(404);
                        response.write('Ð¢ot found');
                        response.end();
                        return 0;
                    } else {
                        var fileStream = fs.createReadStream(filePath);
                        response.writeHead(200, {"Content-Type": mime.lookup(filePath)});
                        fileStream.pipe(response);
                        request.on('close', function () {
                            fileStream.destroy();
                        });
                    }
                });

            }
        };

        this.error = function errorHandler (error) {
            server.console.error(error);
        };

        this.listening = function listeningHandler () {
            server.console.log('HTTP server started at port ' + server.config.httpPort);
        };

    }

    module.exports = HTTPHandlers;

}());
