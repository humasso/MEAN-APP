(function () {

    'use strict';

    function WSHandlers (server) {

        this.connection = function connectionHandler (socket) {
            socket.name = socket.remoteAddress + ":" + socket.remotePort;
            server.wsConnections.push(socket);
            socket.on('message', function (dataJSON) {
                var data = JSON.parse(dataJSON),
                    method = data.method,
                    apiName = method.split('.')[0],
                    apiProcessor = server.api.find(apiName);
                if (apiProcessor) {
                    apiProcessor.completeRequest({
                        methodName: method.split('.')[1],
                        callBody: data
                    }, socket);
                } else {
                    socket.send(JSON.stringify({
                        jsonrpc: '2.0',
                        result: null,
                        error: {
                            code: -32601,
                            message: 'Method not found'
                        },
                        id: data.id
                    }));
                }


                socket.send(data);
            });
            socket.on('end', function () {
                server.wsConnections.splice(server.wsConnections.indexOf(socket), 1);
            });
            socket.send('connected');
        };

        this.error = function errorHandler (error) {
            server.console.error(error);
        };

        this.listening = function listeningHandler () {
            server.console.log('WebSockets server started at port ' + server.config.wsPort);
        };

    }

    module.exports = WSHandlers;

}());
