(function () {

    'use strict';

    var fs = require('fs'),
        mime = require('mime'),
        path = require('path');

    function FileProcessor (server) {

        var _this = this;

        this.fileExists = function fileExists (filePath, callback) {
            fs.exists(filePath, function (exists) {
                if (typeof callback === 'function') {
                    callback(exists);
                }
            });
        };

        this.read = function read (filePath) {
            if (filePath === '/') {
                filePath += 'index.html';
            }
            var fileName = path.join(process.cwd(), filePath);
            _this.fileExists(fileName, function (exists) {
                if (exists) {
                    fs.readFile(fileName, function (error, data) {
                        if (error) {
                            _this.response.writeHead(500);
                            _this.response.end();
                        } else {
                            var type = mime.lookup(fileName);
                            _this.response.writeHead(200, {
                                "Content-Type": type
                            });
                            _this.response.write(data, 'binary');
                            _this.response.end();
                        }
                    });
                } else {
                    _this.response.writeHead(404, 'Not found');
                    _this.response.end();
                }
            });
        };
    }



    module.exports = FileProcessor;


}());
